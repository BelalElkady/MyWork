Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./DIO_prog.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./UART_prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./App.o
LOAD ./DIO_prog.o
LOAD ./UART_prog.o
LOAD ./interrupt.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7be
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./App.o
 .text          0x00000092        0x0 ./DIO_prog.o
 .text          0x00000092        0x0 ./UART_prog.o
 .text          0x00000092        0x0 ./interrupt.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x00000092       0x78 ./App.o
                0x00000092                main
 .text.DIO_voidInit
                0x0000010a       0x7a ./DIO_prog.o
                0x0000010a                DIO_voidInit
 .text.DIO_u8ReadPortDir
                0x00000184       0x52 ./DIO_prog.o
                0x00000184                DIO_u8ReadPortDir
 .text.DIO_u8WritePortDir
                0x000001d6       0x4a ./DIO_prog.o
                0x000001d6                DIO_u8WritePortDir
 .text.DIO_u8ReadPortVal
                0x00000220       0x52 ./DIO_prog.o
                0x00000220                DIO_u8ReadPortVal
 .text.DIO_u8WritePortVal
                0x00000272       0x4a ./DIO_prog.o
                0x00000272                DIO_u8WritePortVal
 .text.DIO_u8ReadPinDir
                0x000002bc       0x94 ./DIO_prog.o
                0x000002bc                DIO_u8ReadPinDir
 .text.DIO_u8WritePinDir
                0x00000350       0xaa ./DIO_prog.o
                0x00000350                DIO_u8WritePinDir
 .text.DIO_u8ReadPinVal
                0x000003fa       0x94 ./DIO_prog.o
                0x000003fa                DIO_u8ReadPinVal
 .text.DIO_u8WritePinVal
                0x0000048e       0xaa ./DIO_prog.o
                0x0000048e                DIO_u8WritePinVal
 .text.UART_voidInit
                0x00000538       0x50 ./UART_prog.o
                0x00000538                UART_voidInit
 .text.UART_voidTxEnable
                0x00000588       0x2a ./UART_prog.o
                0x00000588                UART_voidTxEnable
 .text.UART_voidRxEnable
                0x000005b2       0x2c ./UART_prog.o
                0x000005b2                UART_voidRxEnable
 .text.UART_voidSend
                0x000005de       0x2e ./UART_prog.o
                0x000005de                UART_voidSend
 .text.UART_u8Receive
                0x0000060c       0x1e ./UART_prog.o
                0x0000060c                UART_u8Receive
 .text.UART_voidInteruptSend
                0x0000062a       0x1c ./UART_prog.o
                0x0000062a                UART_voidInteruptSend
 .text.UART_u8InterruptReceive
                0x00000646       0x14 ./UART_prog.o
                0x00000646                UART_u8InterruptReceive
 .text.UART_voidSendString
                0x0000065a       0x44 ./UART_prog.o
                0x0000065a                UART_voidSendString
 .text.UART_voidSendISR
                0x0000069e       0x24 ./UART_prog.o
                0x0000069e                UART_voidSendISR
 .text.UART_voidReceiveISR
                0x000006c2       0x24 ./UART_prog.o
                0x000006c2                UART_voidReceiveISR
 .text.__vector_13
                0x000006e6       0x5a ./UART_prog.o
                0x000006e6                __vector_13
 .text.__vector_14
                0x00000740       0x5a ./UART_prog.o
                0x00000740                __vector_14
 .text.Global_voidInterruptEnable
                0x0000079a       0x10 ./interrupt.o
                0x0000079a                Global_voidInterruptEnable
 .text.Global_voidInterruptDisable
                0x000007aa       0x10 ./interrupt.o
                0x000007aa                Global_voidInterruptDisable
 .text.libgcc   0x000007ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000007ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000007ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000007ba                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000007ba                exit
                0x000007ba                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007ba        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000007be                _etext = .

.data           0x00800060       0x18 load address 0x000007be
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./App.o
 .data          0x00800060        0x0 ./DIO_prog.o
 .data          0x00800060        0x0 ./UART_prog.o
 .data          0x00800060        0x0 ./interrupt.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.DIO_u8RWDirArr
                0x00800060        0x8 ./DIO_prog.o
 .rodata.DIO_u8ReadPortArr
                0x00800068        0x8 ./DIO_prog.o
 .rodata.DIO_u8WritePortArr
                0x00800070        0x8 ./DIO_prog.o
 *(.gnu.linkonce.d*)
                0x00800078                . = ALIGN (0x2)
                0x00800078                _edata = .
                0x00800078                PROVIDE (__data_end, .)

.bss            0x00800078        0x4
                0x00800078                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800078        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800078        0x0 ./App.o
 .bss           0x00800078        0x0 ./DIO_prog.o
 .bss           0x00800078        0x0 ./UART_prog.o
 .bss           0x00800078        0x0 ./interrupt.o
 .bss           0x00800078        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800078        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800078        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.PtrToSendingISR
                0x00800078        0x2 ./UART_prog.o
 .bss.PtrToReciveingISR
                0x0080007a        0x2 ./UART_prog.o
 *(COMMON)
                0x0080007c                PROVIDE (__bss_end, .)
                0x000007be                __data_load_start = LOADADDR (.data)
                0x000007d6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080007c        0x0
                0x0080007c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080007c                PROVIDE (__noinit_end, .)
                0x0080007c                _end = .
                0x0080007c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xf0c
 *(.stab)
 .stab          0x00000000      0x2ac ./App.o
 .stab          0x000002ac      0x6cc ./DIO_prog.o
                                0x75c (size before relaxing)
 .stab          0x00000978      0x45c ./UART_prog.o
                                0x558 (size before relaxing)
 .stab          0x00000dd4      0x138 ./interrupt.o
                                0x144 (size before relaxing)

.stabstr        0x00000000      0x913
 *(.stabstr)
 .stabstr       0x00000000      0x913 ./App.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(UART_Transmitter.elf elf32-avr)
LOAD linker stubs
